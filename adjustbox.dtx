% \iffalse meta-comment
%
% Copyright (C) 2011 by Martin Scharrer <martin@scharrer-online.de>
% -----------------------------------------------------------------
%
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3c
% of this license or (at your option) any later version.
% The latest version of this license is in
%
%   http://www.latex-project.org/lppl.txt
%
% and version 1.3c or later is part of all distributions of LaTeX
% version 2008/05/04 or later.
%
% This work has the LPPL maintenance status `maintained'.
%
% The Current Maintainer of this work is Martin Scharrer.
%
% This work consists of the files adjustbox.dtx, adjustbox.ins
% and the derived file adjustbox.sty.
%
% $Id$
% \fi
%
% \iffalse
%<*driver>
\ProvidesFile{adjustbox.dtx}[2011/08/07 v0.5 DTX File]
\expandafter\ifx\csname ifenglish\endcsname\relax
    \expandafter\newif\csname ifenglish\endcsname
    \englishtrue
\fi
\ifenglish
    \RequirePackage[english]{babel}
\else
    \RequirePackage[ngerman]{babel}
\fi

%\PassOptionsToPackage{ngerman}{hyperref}
%\RequirePackage[ngerman]{babel}
\documentclass{ydoc}[2011/03/19]
\usepackage{amsmath}
\usepackage{fourier}
\GetFileInfo{adjustbox.dtx}
\usepackage[utf8]{inputenc}
\usepackage{adjustbox}
\usepackage{tikz}
\normalmarginpar
\newenvironment{key}[2]{\expandafter\macro\expandafter{%
   \csname KV@#1@#2\endcsname}}{\endmacro}
\newcommand{\DescribeKey}[2]{\expandafter\DescribeMacro\expandafter{%
   \csname KV@#1@#2\endcsname}}

\let\OrigPrintMacroName\PrintMacroName
\def\PrintKeyName#1{%
    {\macrodescstyle{\strut
    \escapechar-1
    \string#1\strut}}%
}%
\let\key\texttt

\newcommand\babelfiledate{%
    \expandafter\babelfileDate\filedate\relax
}
\def\babelfileDate#1/#2/#3\relax{%
    \begingroup
    \year#1
    \month#2
    \day#3
    \today
    \endgroup
}
\optionaloff

%\EnableCrossrefs
%\CodelineIndex
%\RecordChanges
%\OnlyDescription
\renewcommand{\bottomfraction}{0.5}
\begin{document}
  \DocInput{adjustbox.dtx}
  \PrintChanges
  %\newpage\PrintIndex
\end{document}
%</driver>
% \fi
%
% \CheckSum{0}
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%
% \changes{v0.1}{2011/01/24}{First internal version}
% \changes{v0.2}{2011/01/27}{First released version}
% \changes{v0.3}{2011/03/20}{Bug fix for wrong baseline placed on the bottom}
% \changes{v0.4}{2011/07/xx}{Added pdftex driver}
% \changes{v0.5}{2011/08/07}{Added more macros and keys}
%
% \GetFileInfo{adjustbox.dtx}
%
% \DoNotIndex{\newcommand,\newenvironment,\def,\edef,\xdef,\gdef,\let}
%
% \ifenglish\else
%   \title{Das \pkgtitle{adjustbox} Paket}
% \fi
% \author{Martin Scharrer}
% \email{martin@scharrer-online.de}
% \ydocpdfsettings
% \maketitle
%
% \makeatletter
% \def\LATeX{\texorpdfstring{(L\kern -.36em{\sbox \z@ T\vbox to\ht \z@ {\hbox {\check@mathfonts
%  \fontsize \sf@size \z@ \math@fontsfalse \selectfont A}\vss }}\kern -.15em)\TeX}{(La)TeX}}
% \makeatother
%
% \ifenglish
% \begin{abstract}
%  This package provides macros missing in \pkg{graphics} to trim, clip and generally adjust boxed \LaTeX{} material
%  as well as further box modification macros and option keys usable for \Macro\adjustbox and \Macro\includegraphics.
%  The macros use the \pkg{collectbox} package to allow for verbatim content. Equivalent environments are also provided.
%  The trim operation is now implemented in \TeX\ and the clip operation uses |pdftex| primitives if available.
%  Otherwise the \pkg{pgf} package is used for clipping, which supports both DVI/PS and PDF output.
%  \\
%  \textcolor{yellow}{This package is still a little new and its implementation might not be fully stable yet.}
% \end{abstract}
% \else
% \begin{abstract}
%  Dieses Paket stellt einige Makros zur Verfügung die im \pkg{graphics} Paket vermisst werden
%  und \LaTeX{} Material zu beschneiden (\emph{trim}, \emph{clip}) oder allgemein zu modifizieren.
%  Die Makros erlauben Inhalt das im \emph{verbatim} Modus gesetzt ist.
%  Ebenfalls werden passende Umgebungen für die Makros bereitgestellt.
%  Das Beschneiden wird durch eine \env{pgfpicture} Umgebung des Pakets \pkg{pgf} verwirklicht,
%  dass sowohl das PS und PDF Ausgabeformat unterstützt.\\
%  \textcolor{red}{Dieses Paket ist noch neu und seine Implementieren kann sich in zukünftigen Versionen noch ändern!}
% \end{abstract}
% \fi
%
% \ifenglish
% \section{Introduction}
% The standard \LaTeX{} package \pkg{graphicx} (the extended version of \pkg{graphics}) provides the macro \Macro\includegraphics[<options>]{<file name>} which can
% be used to include graphic files. Several options can be used to scale, resize, rotate, trim and/or clip the graphic.
% The macros \Macro\scalebox, \Macro\resizebox and \Macro\rotatebox are also provided to apply the corresponding 
% operation on \LATeX{} material, which is subsequently placed inside a \Macro\hbox.
% However no macros are provided to trim or clip \LATeX{} material, most likely because this operations
% are not done by \TeX{} but by the output format, i.e. using PostScript (PS) or PDF operations.
%
% This package provides the missing macros \Macro\clipbox and \Macro\trimbox
% as well as the general \Macro\adjustbox macro. The trim operation is implemented as \TeX\ code
% and the clip operation either using a |pdftex| or a \env{pgfpicture} environment from the \pkg{pgf} package
% which supports both PS and PDF output. All \LaTeX\ compilers should be supported, but |pdflatex| is the main target of the
% author.
% \else
% \section{Einleitung}
% Das \LaTeX{} Paket \pkg{graphicx} (die erweiterte Version von \pkg{graphics}) stellt das Macro \Macro\includegraphics[<Optionen>]{<Dateiname>} zur Verfügung
% mit dem Bilddateien eingebunden werden können. Zahlreiche Optionen können benutzt werden um das Bild zu skalieren, an eine vorgegebene Größe anzupassen, es zu rotieren 
% oder den Rand zu beschneiden.
% Ebenfalls stellt das Paket die Makros \Macro\scalebox\relax (skalieren), \Macro\resizebox\relax (Größe ändern) und \Macro\rotatebox\relax (rotieren) zur Verfügung um \LATeX{} Material,
% z.B.\ normalen Text, entsprechend anzupassen. Dies wird dazu in eine horizontale Box (\Macro\hbox) gesetzt.
% Allerdings fehlen Makros um \LATeX{} Material zu beschneiden, wobei der abgeschnittenen Rand entweder sichtbar bleibt (engl.: \emph{trim}) oder ausgeblendet wird (engl. \emph{clip}).
% Dies ist wahrscheinlich der Fall, weil diese Operationen nicht von \TeX{} selbst vorgenommen werden, sondern von dem verwendeten Ausgabeformat, z.B.\ durch PostScript (PS)
% oder PDF Operationen.
%
% Das \textsf{adjustbox} Paket definiert die Makros \Macro\clipbox und \Macro\trimbox, sowie das allgemeine \Macro\adjustbox Macro (engl.: \emph{adjust} = anpassen).
% Das Beschneiden wird durch eine \env{pgfpicture} Umgebung des Pakets \pkg{pgf} verwirklicht, dass sowohl das PS und PDF Ausgabeformat unterstützt.
% \fi
%
% \section{Package Option}
% Following v0.5 from 2011/08/07 this package accepts the following package options. Some of them can also be used as
% optional keys for macros.
%
% \begin{description}\def\oitem#1{\item[{\normalfont\opt{#1}}]}
%   \oitem{minimal} Only define the minimal set of macros, i.e.\ \Macro\trimbox, \Macro\clipbox and \Macro\adjustbox as
%       with previous versions before v0.5.
%   \oitem{export} Export the now keys of \Macro\adjustbox also to \Macro\includegraphics so that they can be used for
%       images as well. This option is meaningless if \opt{minimal} was used.
%   \oitem{patch} Patch the internal \pkg{graphicx} code to allow the usage of size macros.
%                 This simply loads the small \pkg{adjgrfx} package which can also be used independently.
%                 (Not fully implemented and tested yet!)
%   \oitem{pgf} Uses the \pkg{pgf} package for all clip operations. This overrides all automatically detected drivers.
%               At the moment only a |pdftex| driver is provided, all other compilers and output formats use this option already.
%   \oitem{PGF} Uses the \pkg{pgf} package for clip operations and configures the macros to parse lengths using
%   \pkg{pgfmath} (compare with the \opt{pgf} option below).
%  \end{description}
%
% The following options define the way length values are processed by the provided macros.
% They can be used either as package options and as keys for \Macro\adjustbox\relax (but not for \Macro\includegraphics
% even if the \opt{export} option was used) to change the settings locally.
% The only difference between these two usages is that they also load required packages when used as package options.
% Therefore all keys used in the document should be loaded as package options first or the required packages must be loaded
% manually. (It is also possible to disable the advanced parsing of lengths using the \opt{none} option, but this is not recommended.)
%
% \begin{description}\def\oitem#1{\item[{\normalfont\opt{#1}}]}
%   \oitem{etex} Uses the $\epsilon$-\TeX\ primitive \Macro\dimexpr to parse length values. This allows for additions,
%      subtractions as well as multiplications and devision by a numeric factor. See the official \pkg{etex\_man} document
%      for more details. This setting is the default if $\epsilon$-\TeX\ is detected (which should be the case with all
%      modern \LaTeX\ distributions).
%   \oitem{calc} Uses the \pkg{calc} package to parse length values. It supports all operations mentioned for \opt{etex} and
%      also some other operation like \Macro\widthof{<text>}.
%      See the \pkg{calc} package manual for more details.
%      This is the default setting if $\epsilon$-TeX is not detected.
%   \oitem{pgfmath} Uses the \pkg{pgfmath} package of the \pkg{pgf} bundle to parse length values. It supports all basic
%      numeric operations and also advanced mathematical functions.
%      See the \pkg{pgf} manual for more details.
%      Because the \pkg{pgfmath} package can't be loaded
%      independently in the current version (v2.10) the whole \pkg{pgf} package will be loaded.
% \end{description}
%
% One further option exists which can also be used as optional key for \Macro\adjustbox\relax (but not for
% \Macro\includegraphics):
% \begin{description}\def\oitem#1{\item[{\normalfont\opt{#1}}]}
%   \oitem{defaultunit}\MacroArgs'='<unit>\relax
%      This sets the default unit used for the values of \Macro\trimbox, \Macro\clipbox and \Macro\marginbox
%      including there starred versions
%      as well as all related keys like |trim|, |viewport|, |margin|, |Trim|, |Viewport|, |Clip| and |Clip*|.
%      The standard default unit is the same as for \Macro\includegraphics: `|bp|' (big points, PostScript points).
%      However, for \LaTeX\ material \TeX\ normal unit `|pt|' (\TeX\ points) are better suited and will avoid rounding
%      errors which otherwise get introduced by the internal conversion.
%      The default unit is only used if the particular value is only a single number without unit,
%      but not if any mathematical operations are used.
%      If the special value |none| is used no default unit is applied and the internal check if the value is a single number
%      is by-passed. This gives a small speed bonus and can be used to avoid potential issues with complex values.
%      At this moment this setting will disable the default unit feature for the rest of the current group (i.e.\ all
%      further \Macro\adjustbox keys or globally if used as a package option) and further usages of this option will
%      have no affect. This might change in future versions of this package.
% \end{description}
%
% \ifenglish
% \def\llx{llx}
% \def\lly{lly}
% \def\urx{urx}
% \def\ury{ury}
% \def\TEXT{text}
% \def\height{height}
% \def\width{width}
% \def\totalheight{totalheight}
% \def\depth{depth}
% \def\factor{factor}
% \def\xfactor{x-factor}
% \def\yfactor{y-factor}
% \def\Angle{angle}
% \def\options{options}
% \else
% \def\llx{lux}
% \def\lly{luy}
% \def\urx{orx}
% \def\ury{ory}
% \def\TEXT{Text}
% \def\height{Höhe}
% \def\width{Weite}
% \def\totalheight{Totale Höhe}
% \def\depth{Tiefe}
% \def\factor{Faktor}
% \def\xfactor{X-Faktor}
% \def\yfactor{Y-Faktor}
% \def\Angle{Winkel}
% \def\options{Optionen}
% \fi
%
% \ifenglish
% \section{Usage}
% This section describes the usage of the provided macros, which are outlined in \autoref{sec:basicmacros}.
% Possible advanced values for the macro arguments are mentioned in \autoref{sec:argval}. The existing verbatim support
% is explained in \autoref{sec:verbatim}. Finally \autoref{sec:alternatives} compares the existing macros with the 
% corresponding options of \Macro\adjustbox.
% Further box modification macros and keys are described in \autoref{sec:moremacros} and \autoref{sec:newkeys}, respectively.
% See the example \autoref{sec:example} for examples of this macros.
%
% It is recommended to also read the \emph{Graphics Guide} (|grfguide|, i.e.~the manual of the |graphics|/|x| packages),
% to understand the existing options for \Macro\includegraphics. 
% \else
% \newpage
% \section{Anleitung}
% Dieser Abschnitt beschreibt die Verwendung der Makros dieses Pakets. Diese werden zuerst im \autoref{sec:basicmacros} beschrieben.
% \autoref{sec:argval} erklärt welche Werte in den Makroargumenten verwendet werden können. Die Makros unterstützen sogenannten
% \emph{verbatim} (engl.: wortgetreu) Inhalt was im \autoref{sec:verbatim} erleutert wird.
% Schlussendlich wird im \autoref{sec:alternatives} die exisitierenden Makros mit den entsprechendem Optionen von \Macro\adjustbox
% verglichen. Beispiele für die beschriebenen Makros befinden sich im folgendem \autoref{sec:example}.
%
% Dem Leser wird darüberhinaus die Lektüre der Anleitung der |graphic|/|x| Pakete, der \emph{Graphics Guide}, empfohlen wo
% die möglichen Optionen für das Makro \Macro\includegraphics gelistet sind, die auch für \Macro\adjustbox verwendet werden.
% \fi
%
% \ifenglish
% \Needspace*{7\baselineskip}
% \subsection{Basic Box Modification Macros}\label{sec:basicmacros}
% This section lists the provided macros \Macro\clipbox and \Macro\trimbox missing in the \pkg{graphicx} package
% as well as the general \Macro\adjustbox macro.  If the package is loaded with the \opt{minimal} option no further macros or keys are defined.
% \else
% \subsection{Makros zur Modifikation von {\LaTeX} Material}\label{sec:basicmacros}
% \fi
%
% \ifenglish
% \subsubsection*{Trim Box Content}
% \else
% \subsubsection*{Rand beschneiden ohne Überhang auszublenden}
% \fi
% \vskip-\lastskip
% \DescribeMacro\trimbox*{<\llx>~<\lly>~<\urx>~<\ury>}{<\TEXT>}
% \ifenglish
% \subsubsection*{Trim Box Content}
% The macro \Macro\trimbox trims the given amount from the lower left (ll) and the upper right (ur) corner of
% the box. This means that the amount \meta{llx} is trimmed from the left side, \meta{lly} from the bottom and
% \meta{urx} and \meta{ury} from the right and top of the box, respectively.
% Trimming means that the official size of the box is reduced, but no material
% is actual removed. The material in the trimmed areas simply swaps over the official border.
%
% If the starred version is used the four coordinates are taken as the |viewport| instead, i.e. the box
% is trimmed to the rectangle described by the coordinates.
% \else
% Das Makro \Macro\trimbox setzt den \meta{Text} in eine \TeX{} Box und reduziert dessen offizielle Größe
% (\emph{bounding box}, engl.: begrenzende Box), so dass \TeX{} annimmt es wäre entsprechend kleiner. Überstehendes Material
% ragt deswegen in den umgebenden Text hinein.
% Die angegebenen Werte im ersten Argument stehen für die Beträge die von der unteren linken (lu) und der oberen rechten (or)
% Ecke entfernt werden. Das heisst, dass der Wert \meta{lux} vom linken Rand, \meta{lly} vom unterem Rand und \meta{orx} und \meta{ory}
% von rechten bzw. oberen Rand abgezogen werden.
% Wird das Makro allerdings in der Sternvariante aufgerufen, stehen die vier Werte für den Darstellungsbereich (\emph{viewport}) und 
% alles ausserhalb wird von der offiziellen Größe abgeschnitten.
% \fi
%
%
% \DescribeEnv[<\TEXT>]{trimbox}*{<\llx>~<\lly>~<\urx>~<\ury>}
% \vspace{-\baselineskip}
% \DescribeEnv[<\TEXT>]{trimbox*}{<\llx>~<\lly>~<\urx>~<\ury>}
% \ifenglish
% The \env{trimbox} and \env{trimbox*} environments do the same as the corresponding macros.
% Special care is taken so that the macros and the environments can have the same name.
% Because of this the star can be either part of the name or an optional argument.
% Also the plain\TeX{} syntax for environments (|\trimbox ... \endtrimbox|) can not be used
% because it will trigger \Macro\trimbox as a macro. 
% \else
% Die Umgebungen \env{trimbox} und \env{trimbox*} erzeugen den selben Effekt wie die gleichnamigen Makros.
% Ein spezieller Trick wird verwendet, damit der selbe Name für ein Makro und für eine Umgebung verwendet werden kann,
% was normallerweise nicht der Fall ist. Aufgrund dessen akzeptier die \env{trimbox} Umgebung auch einen optionallen Stern.
% Die plain\TeX{} Schreibweise für Umgebungen (|\trimbox ... \endtrimbox|) kann allerdings nicht verwendet werden,
% da es \Macro\trimbox als Makro aufrufen würde.
% \fi
%
%
% \ifenglish
% \subsubsection*{Clip Box Content}
% \else
% \subsubsection*{Rand beschneiden und Überhang ausblenden}
% \fi
% \vskip-\lastskip
% \DescribeMacro\clipbox*{<\llx>~<\lly>~<\urx>~<\ury>}{<\TEXT>}
% \ifenglish
% The \Macro\clipbox macro works like the \Macro\trimbox and trims the given amounts from the \meta{text}.
% However, in addition the trimmed material is also clipped, i.e. it is not shown in the final document.
% Note that the material will still be part of the output file but is simply not shown.
% It might be exported using special tools, so using \Macro\clipbox\relax (or \Macro\includegraphics[clip,trim=...])
% to censor classified information would be a bad idea.
% The starred version will again use the given coordinates as |viewport|. 
% \else
% Das \Macro\clipbox Makro arbeiten ähnlich wie \Macro\trimbox nur, dass der entfernte Rand auch wirklich
% ausgeblendet wird. Allerdings bleibt dieses Material Teil der Ausgabedatei und könnte durch spezielle Software exportiert werden.
% Von der Verwendung von \Macro\clipbox\relax (oder \Macro\includegraphics'[clip,trim=...]') um vertrauliche Informationen zu zensieren
% kann deswegen nur abgeraten werden.
% Die Sternvariante verwendet die angegebenen Werte als den zu darstellenden Bereich wie bei \Macro\trimbox'*'.
% \fi
%
% \DescribeEnv[<\TEXT>]{clipbox}*{<\llx>~<\lly>~<\urx>~<\ury>}
% \vspace{-\baselineskip}
% \DescribeEnv[<\TEXT>]{clipbox*}{<\llx>~<\lly>~<\urx>~<\ury>}
% \iffalse
% The environment versions of \Macro\clipbox and \Macro\clipbox*. The same rules as for the trimming environments apply.
% \else
% Die obigen Makros als Umgebungen. Es gelten die gleichen Regeln wie bei den \env{trimbox} Umgebungen.
% \fi
%
%
% \ifenglish
% \subsubsection*{Adjust Box Content}
% \else
% \subsubsection*{Allgemeine Manipulationen von \LaTeX{} Material}
% \fi
% \vskip-\lastskip
% \DescribeMacro\adjustbox{<includegraphics \options>}{<\TEXT>}
% \ifenglish
% The \Macro\adjustbox macro is the general form of all box modifying macros mentioned in the introduction.
% It can be thought as an \Macro\includegraphics for \LATeX{} material.
% It supports the same set of \meta{options}, however they are provided as a mandatory not as an optional argument.
% An \Macro\adjustbox without options would not make sense and can be replaced by a simple \Macro\mbox.
% There is no starred version of this macro. See also \autoref{tab:alternatives} for a comparison of \Macro\adjustbox
% with the other macros.
% \else
% Mit Hilfe des \Macro\adjustbox Makros (engl.\ \emph{adjust} = anpassen, justieren) ist es möglich die selben Optionen
% die \Macro\inludegraphics für Bilder zur Verfügung stellt auch auf beliebiges \LATeX{} Material anzuwenden.
% Die \meta{Optionen} sind dabei allerdings nicht optional, da \Macro\adjustbox ohne jegliche Optionen einem \Macro\mbox
% gleich käme. Eine Sternvariante existiert für dieses Makro nicht.
% Es kann dazu verwendet werden Kombinationen von anderen ähnlichen Makros zu ersetzen, was in \autoref{tab:alternatives} dargestellt wird.
% \fi
%
% \DescribeEnv[<\TEXT>]{adjustbox}{<includegraphics \options>}
% \ifenglish
% The environment version of \Macro\adjustbox.
% \else
% Wie für die anderen Makros gibt es auch für \Macro\adjustbox eine passende Umgebung.
% \fi
%
% \ifenglish
% \subsection{Argument Values}\label{sec:argval}
% The\marginpar{Parsing} argument values are parsed by versatile \Macro\pgfmathparse of the already used |pgf| package.
% This allows very complex arithmetic expressions as any of the trim/clip coordinates or other numeric options.
% See the |pgfmanual| for detailed information.
% Note\marginpar{Space=Separator} that the four values for \Macro\trimbox and \Macro\clipbox as well as for the |trim| and |viewport| option of \Macro\adjustbox
% are separated by spaces. If the expression of any of this values holds a space or ends with a macro (eats trailing spaces!) it must be wrapped into braces `|{ }|'.
% \else
% \newpage
% \subsection{Erlaubte Werte für Makroargumente}\label{sec:argval}
% Die numerischen Werte für die Makros werden durch das vielseitige \Macro\pgfmathparse Makro des sowieso schon verwendeten \pkg{pgf} Paketes
% eingelesen. Dies erlaubt die Verwendung von einfachen oder komplizierten Formeln.
% Eine genaue Beschreibung der unterstützten mathematischen Operationen befindet sich im Handbuch des \pkg{pgf} Paketes.
% Dabei muss beachtet werden das die vier Werte für die \Macro\trimbox und \Macro\clipbox Makros sowie für die |trim| und |viewport| Optionen von \Macro\adjustbox
% durch Leerzeichen getrennt werden müssen. Komplizierte Angaben die ein Leerzeichen enthalten oder auf ein Makro enden (entfernt nachfolgende Leerzeichen) müssen
% deswegen in geschweifte Klammern `|{ }|' gesetzt werden.
% \fi
%
%
% \DescribeMacros
%    \hbox{\Macro\width~~~\Macro\height~~~\Macro\depth~~~\Macro\totalheight}%
% \endDescribeMacros
% \ifenglish
% These \LaTeX{} lengths hold the original dimension of \meta{text} and can be used as part of the arguments to \Macro\adjustbox, \Macro\trimbox and \Macro\clipbox.
% The totalheight is the height plus depth. With the \pkg{patch} option these lengths can also be used for \Macro\includegraphics.
% \else
% Diese \LaTeX{} Längen enthalten die Weite, Höhe, Tiefe bzw.\ die totale Höhe (Höhe + Tiefe) des \meta{\TEXT} Arguments bzw.\ des Inhalts der Umgebung.
% Diese Längen können in den ersten Argument von \Macro\adjustbox, \Macro\trimbox und \Macro\clipbox verwendet werden um relative Änderungen vorzunehmen.
% \fi
%
% If\marginpar{Default unit} no unit is provided for of the bounding box coordinates (\llx, \lly, \urx, \ury) then PostScript points
% (\emph{big points}, bp, $72\,\text{bp}=1\,\text{inch}$) are used, as it is the default behaviour
% of the |trim| and |viewport| options of \pkg{graphicx}'s \Macro\includegraphics. Note that \pkg{graphicx} converts all values, independent if a unit is provided or not,
% internally to bp, because graphics where traditionally stored in Encapsulated PostScript (EPS) files. The more modern PDF files also use bp instead of pt.
% Because the |adjustbox| package macros target \LATeX{} material and users will mostly use pt values this internal conversion to bp got disabled for them to 
% avoid unnecessary rounding errors. Since v0.5 the default unit can be changed using the |defaultunit|\MacroArgs'='<unit>\relax
% key (which is also usable as global package option).
%
%
% \subsubsection*{Examples for Argument Values}
% \codeline{\AlsoMacro\trimbox{'{.5\width} 10 {log10(10)/sin(45) + 1} 10pt'}{<\TEXT>}}
% will trim half the original amount from the left, 10\,bp from the bottom and 
% 2.42328\,bp from the right (bp, because no unit was used in the formula; change e.g. `|+ 1|' to `|+ 1pt|' to get 2.42328\,pt),
% as well as 10\,pt from the top.
%
% \subsection{Verbatim Support}\label{sec:verbatim}
% The macros read the \meta{text} as \TeX{} \Macro\hbox and not as an macro argument in order to support verbatim content.
% This functionality is now provided as dedicated package \pkg{collectbox} which can also be used independently.
% This means that the braces around the content can also be written as \Macro\bgroup and \Macro\egroup:
% \begin{macroquote}
%   \trimbox{1 2 3 4}\AlsoMacro\bgroup~<\TEXT>\AlsoMacro\egroup
% \end{macroquote}
% Special care is taken to allow the \meta{text} to be a single macro (except \Macro\bgroup) without any braces:
% \begin{macroquote}
%   \clipbox{1 2 3 4}\AlsoMacro\somemacro
% \end{macroquote}
% This is to support the questionable habit of some \LaTeX{} users to drop the braces for single token arguments.
% All environments support verbatim content.
%
% \ifenglish
% \subsection{Alternatives for existing Macros}\label{sec:alternatives}
% The flexible \Macro\adjustbox can also be used as an alternative to existing macros from the \pkg{graphics} package as shown by Table~\ref{tab:alternatives}.
% Because it is longer then the originals this is only of benefit if combinations are to be replaced or verbatim text must be supported.
% \else
% \subsection{Alternativen für existierende Makros}\label{sec:alternatives}
% Das flexible \Macro\adjustbox Makro kann auch als Alternative für die vorhandenen Makros des \pkg{graphics} Paketes verwenden werden.
% Dies ist in Tabelle~\ref{tab:alternatives} dargestellt.
% Die dies allerdings mehr Schreibarbeit darstellt ist es nur dann von Vorteil, falls mehrere Operationen verknüpft werden sollen
% oder wenn der entsprechende Text im \emph{verbatim} Modus eingelesen werden soll.
% \fi
%
% \ifenglish
% \begin{table}[!hb]
% \else
% \begin{table}[!hb]
% \fi
% \belowcaptionskip\abovecaptionskip
% \colorlet{optional}{black}
% \ifenglish
% \caption{Alternatives for existing Macros}
% \else
% \caption{Alternativen für existierende Makros}
% \fi
% \label{tab:alternatives}
% \hbox to \linewidth{\hss
% \begin{tabular}{ll}
%   \toprule
%   \ifenglish
%   Original Macro (w/o text argument)  &  Alternative  (w/o text argument) \\
%   \else
%   Originales Makro (ohne Text Argument)  &  Alternative  (ohne Text argument) \\
%   \fi
%   \midrule
%   \Macro\rotatebox{<\Angle>}    &   \Macro\adjustbox{'angle='<\Angle>}  \\
%   \Macro\scalebox{<\factor>}    &   \Macro\adjustbox{'scale='<\factor>}  \\
%   \Macro\scalebox{<\xfactor>}[<\yfactor>]    &   \Macro\adjustbox{'width='<\xfactor>\AlsoMacro\width',height='<\yfactor>\AlsoMacro\height}  \\
%   \Macro\reflectbox            &   \Macro\adjustbox{'width=-'\AlsoMacro\width',height='\AlsoMacro\height}  \\
%   \Macro\resizebox{<\width>}{<\height>}    &   \Macro\adjustbox{'width='<\width>',height='<\height>}  \\
%   \Macro\resizebox*{<\width>}{<\totalheight>}    &   \Macro\adjustbox{'width='<\width>',totalheight='<\totalheight>}  \\
%   \Macro\trimbox{<\llx>~<\lly>~<\urx>~<\ury>}    &   \Macro\adjustbox{'trim='<\llx>~<\lly>~<\urx>~<\ury>}  \\
%   \Macro\trimbox*{<\llx>~<\lly>~<\urx>~<\ury>}    &   \Macro\adjustbox{'viewport='<\llx>~<\lly>~<\urx>~<\ury>}  \\
%   \Macro\clipbox{<\llx>~<\lly>~<\urx>~<\ury>}    &   \Macro\adjustbox{'trim='<\llx>~<\lly>~<\urx>~<\ury>,clip}  \\
%   \Macro\clipbox*{<\llx>~<\lly>~<\urx>~<\ury>}    &   \Macro\adjustbox{'viewport='<\llx>~<\lly>~<\urx>~<\ury>,clip}  \\
%   \bottomrule
% \end{tabular}%
% \hss}%
% \end{table}
%
%
%
% \subsection{Further Box Modification Macros}\label{sec:moremacros}
% This section lists further macros which are defined unless the package is loaded with the \opt{minimal} option.
%
% \DescribeMacro\marginbox{<\llx>~<\lly>~<\urx>~<\ury>}{<\TEXT>}
% This macro can be used to add a margin (white space) around the content. It can be seen as the opposite of \Macro\trim.
% It is also available as \env{marginbox} environment and also usable as |margin| option (see below).
% There is no star variant.
%
%
% \DescribeMacro\minsizebox{<width>}{<height>}{<\TEXT>}
% \DescribeMacro\minsizebox*{<width>}{<totalheight>}{<\TEXT>}
% This macro is like \Macro\resizebox of the \pkg{graphics/x} package, but only resizes the content if its natural size is smaller
% than the given \meta{width} or \meta{height}.
% If only one value should be set the other one can be replaced by `|!|'.
% If required the content is scaled up so that the width and height is equal or larger than the given values, but does not change 
% the aspect ratio. 
% The star variant uses the total height instead of only the height.
% This macro is used internally for the |min width|, |min height|, |min totalheight| and |min totalsize| options.
%
% \DescribeMacro\maxsizebox{<width>}{<height>}{<\TEXT>}
% \DescribeMacro\maxsizebox*{<width>}{<totalheight>}{<\TEXT>}
% This macro is like \Macro\resizebox of the \pkg{graphics/x} package, but only resizes the content if its natural size is larger
% than the given \meta{width} or \meta{height}.
% If only one value should be set the other one can be replaced by `|!|'.
% If required the content is scaled down so that the width and height is equal or smaller than the given values, but does not change 
% the aspect ratio.
% The star variant uses the total height instead of only the height.
% This macro is used internally for the |max width|, |max height|, |max totalheight| and |max totalsize| options.
%
%
% \DescribeMacro\lapbox[<width>]{<lap amount>}{<\TEXT>}
% This macro is a generalisation of the \LaTeX\ core macros \Macro\rlap{<\TEXT>} and \Macro\llap{<\TEXT>} which lap the
% text to the right or left without taking any official space. The \Macro\lapbox macro can be used to only partially lap
% the content to the right (positive amount) or left (negative amount). As with all macros of this package the original width
% can be references using \Macro\width. The resulting official width of the box is normally the original width minus the absolute
% lap amount. However, it can also be set explicitly using the option argument.
% It is also possible to use lap amount which absolute values are larger than the original width. In this case the resulting
% official width will be zero by default and the content will padded with the required white space.
% Note that the lap amount always states the distance between the right side of the official box and the right side of the actual
% content for positive amounts or the distance between the left side of the official box and the left side of the actual content 
% for negative values.
%
% For example, \Macro\lapbox[0pt]{\width}{<\TEXT>} is equivalent to \Macro\rlap{<\TEXT>} and
% \Macro\lapbox[0pt]{-\width}{<\TEXT>} is equivalent to \Macro\llap{<\TEXT>}.
% A centering \Macro\clap macro can be achieved using \Macro\lapbox[0pt]{.5\width} or \Macro\lapbox[0pt]{-.5\width}.
%
% \subsection{New keys for \cs{adjustbox} and \cs{includegraphics}}\label{sec:newkeys}
% This section lists provided keys usable as \Macro\adjustbox options and, if the \opt{export} package option was used, also as \Macro\includgraphics options.
% If the package is loaded with the \opt{minimal} option this code is skipped.
% \let\PrintMacroName\PrintKeyName
%
% \subsubsection{Trimming and Clipping}
%
% \DescribeMacro{Trim}'='<llx>~<lly>~<urx>~<ury>
% \DescribeMacro{Viewport}'='<llx>~<lly>~<urx>~<ury>
% The normal |trim| and |viewport| keys
% {\let\PrintMacroName\OrigPrintMacroName
% as described earlier are applied on the original content before any resizing
% or other effects. This is because for \Macro\includegraphics the trimming is done by the internal graphic driver,
% while the effects can be applied later (but can also be driver dependent).
% If the |trim| and |viewport| keys are used multiple times the last values will be used for the trimming, i.e. the content is only 
% trimmed once. The upper case variants |Trim| and |Viewport| will wrap the content internally in a \Macro\trimbox or \Macro\trimbox*\relax
% macro which can be applied multiple times, e.g.\ before and after the content is rotated.
% These two keys awaits the same format as the original keys. However, the |clip| key has no effect on them.}
%
% \DescribeMacro{Clip}'='<llx>~<lly>~<urx>~<ury>
% \DescribeMacro{Clip*}'='<llx>~<lly>~<urx>~<ury>
% As stated above the |clip| boolean key
% {\let\PrintMacroName\OrigPrintMacroName
% which will make the default |trim| and |viewport| keys clip the trimmed content, has no effect
% on the |Trim| and |Viewport| keys. Instead |Clip| and |Clip*| are provided which wrap the content internally in a \Macro\clipbox or 
% \Macro\clipbox*\relax macro. They can be used several times.}
%
%
% \subsubsection{Frame and Margin}
%
% \DescribeMacro{frame}
% \DescribeMacro{frame}'='<width>
% \DescribeMacro{frame}'='<width>~<sep>
% This key will draw a black frame around the content.
% {\let\PrintMacroName\OrigPrintMacroName
% By default the frame lines will have a thickness of \Macro\fboxrule\relax
% (i.e.\ the same thickness like \Macro\fbox) and will be placed tightly around the content with zero separation.
% The line width and also the separation can be defined as the optional value.}
%
%
% \DescribeMacro{margin}'='<llx>~<lly>~<urx>~<ury>
% This key can be used to add a margin (white space) around the content. It can be seen as the opposite of |trim| (and in fact is implemented
% almost identical to it with negated signs). The four values are added to the left, bottom, right and top side of the content, respectively.
% If negative values are given the content is actually trimmed, but this will lead to wrong results if the absolute values are bigger
% than the available amount. This is particularly a problem with the depth. The |trim| and |Trim| code will handle this case correctly, however.
%
% \subsubsection{Size/Scaling}
%
% \DescribeMacro{min width}'='<width>
% \DescribeMacro{max width}'='<width>
% \DescribeMacro{min height}'='<height>
% \DescribeMacro{max height}'='<height>
% \DescribeMacro{min totalheight}'='<total height>
% \DescribeMacro{max totalheight}'='<total height>
% These keys allow to set the minimum and maximum width, height or totalheight of the content.
% The current size of the content is measured and the content is resized if the constraint is not already met,
% otherwise the content is unchanged. Multiple usages of these keys are checked one after each other, and therefore
% it is possible that a later one is undoing the size changes of an earlier one.
% A good example is |max width=\textwidth| which will limit large content to the text width but will not affect smaller
% content.
%
% \DescribeMacro{min size}'='{<width>}{<height>}
% \DescribeMacro{max size}'='{<width>}{<height>}
% \DescribeMacro{min totalsize}'='{<width>}{<total height>}
% \DescribeMacro{max totalsize}'='{<width>}{<total height>}
% These keys allow to specify the minimum or maximum width and (total)height of the content together,
% which is more efficient than using the width and (total)height keys described earlier.
%
% \DescribeMacro{reflect}
% This reflects
% {\let\PrintMacroName\OrigPrintMacroName
% the content by using \Macro\reflectbox internally, which is identical to \Macro\scalebox{1}[-1].}
%
%
% \subsubsection{Positioning and Alignment}
%
% \DescribeMacro{raise}'='<amount>
% \DescribeMacro{raise}'='{<amount>}{<height>}
% \DescribeMacro{raise}'='{<amount>}{<height>}{<depth>}
% This key uses 
% {\let\PrintMacroName\OrigPrintMacroName
% \Macro\raisebox{<amount>}{\ldots} to raise the content upwards for the given \meta{amount} (length).
% A negative length moves the content down.
% The two optional arguments of \Macro\raisebox{<amount>}[<height>][<depth>]{\ldots}\relax are also available
% as optional brace arguments. They can be used to set the official height and depth of the content.
% This is also possible using the |set height| and |set depth| keys.
% }
%
% \DescribeMacro{valign}'='<letter>
% This key allows to vertically align the content to the top, middle and bottom.  The uppercase letters |T|, |M| and |B|
% {\let\PrintMacroName\OrigPrintMacroName
% align to the content top (i.e. all depth, no height), the geometric, vertical center (equal height and depth) and to
% the bottom (all height, no depth), respectively.  This allows the alignment of content of different size, but will not
% result in good alignment with text.  The lowercase letters |t|, |m| and |b| are aligning the content again to the top,
% center and bottom but take the current text size in account.
% The |t| letter leaves a certain height given by the macro\footnote{A macro and not a length is used to allow for
% font size relative values like \texttt{1ex}.} \Macro\adjboxvtop\relax
% (by default set to the height of \Macro\strut\relax, i.e.\ |\ht\strutbox|, which is |.7\baselineskip|),
% while |b| sets a certain depth given (as negative length) by the macro \Macro\adjboxvbottom\relax
% (by default equal to the (negated) \Macro\strut depth, i.e.\ |-\dp\strutbox|, which is |.3\baselineskip|).
% The |m| letter will center towards the vertical center of the text line which is determined by the macro
% \Macro\adjboxvcenter\relax (by default \texttt{1ex}).}
%
% The following table shows the different alignments for three different sized blocks:
% 
% \bigskip
% \begingroup
% \def\vr{%
%     \unskip
%     \tikz [gray] {\useasboundingbox (0,0);
%       \draw (-13.5em,0) -- (2.25em,0);
%       \draw (-13.5em,\adjboxvcenter) -- (2.25em,\adjboxvcenter);
%     }%
%     \unskip\ignorespaces
% }%
% \centerline{%
% \begin{tabular}{cccm{2em}}
%  \toprule
%   \texttt{T} & \texttt{M} & \texttt{B} & Text \\
%   \adjustbox{valign=T}{\textcolor{red}{\rule{1em}{2em}\unskip}}\unskip
%   \adjustbox{valign=T}{\textcolor{green}{\rule{1em}{3em}\unskip}}\unskip
%   \adjustbox{valign=T}{\textcolor{blue}{\rule{1em}{1ex}\unskip}} &
%   \adjustbox{valign=M}{\textcolor{red}{\rule{1em}{2em}\unskip}}\unskip
%   \adjustbox{valign=M}{\textcolor{green}{\rule{1em}{3em}\unskip}}\unskip
%   \adjustbox{valign=M}{\textcolor{blue}{\rule{1em}{1ex}\unskip}} &
%   \adjustbox{valign=T}{\textcolor{red}{\rule{1em}{2em}\unskip}}\unskip
%   \adjustbox{valign=T}{\textcolor{green}{\rule{1em}{3em}\unskip}}\unskip
%   \adjustbox{valign=T}{\textcolor{blue}{\rule{1em}{1ex}\unskip}} &
%   Mxy \newline \mbox{\vr Mxy}\newline Mxy \\
%  \midrule
%   \texttt{t} & \texttt{m} & \texttt{b} & Text \\
%   \adjustbox{valign=t}{\textcolor{red}{\rule{1em}{2em}\unskip}}\unskip
%   \adjustbox{valign=t}{\textcolor{green}{\rule{1em}{3em}\unskip}}\unskip
%   \adjustbox{valign=t}{\textcolor{blue}{\rule{1em}{1ex}\unskip}} &
%   \adjustbox{valign=m}{\textcolor{red}{\rule{1em}{2em}\unskip}}\unskip
%   \adjustbox{valign=m}{\textcolor{green}{\rule{1em}{3em}\unskip}}\unskip
%   \adjustbox{valign=m}{\textcolor{blue}{\rule{1em}{1ex}\unskip}} &
%   \adjustbox{valign=t}{\textcolor{red}{\rule{1em}{2em}\unskip}}\unskip
%   \adjustbox{valign=t}{\textcolor{green}{\rule{1em}{3em}\unskip}}\unskip
%   \adjustbox{valign=t}{\textcolor{blue}{\rule{1em}{1ex}\unskip}} &
%   Mxy \newline \mbox{\vr Mxy}\newline Mxy \\
%  \bottomrule
% \end{tabular}}
% \endgroup
%
%
% \DescribeMacro{set height}'='<height>
% This sets the official height of the content without actual changing it. This can be seen as a form of trimming.
% It uses the same internal code as\\
% {\let\PrintMacroName\OrigPrintMacroName
% \Macro\raisebox{'0pt'}[<height>]{<content>}}.
%
%
% \DescribeMacro{set depth}'='<depth>
% This sets the official depth of the content without actual changing it. This can be seen as a form of trimming.
% It uses the same internal code as\\
% {\let\PrintMacroName\OrigPrintMacroName
% \Macro\raisebox{'0pt'}['\height'][<depth>]{<content>}}.
%
%
% \DescribeMacro{lap}'='<lap amount>
% \DescribeMacro{lap}'='{<length>}{<lap amount>}
% This wraps the content into a
% {\let\PrintMacroName\OrigPrintMacroName
% \Macro\lapbox{<lap amount>}{\ldots} and
% \Macro\lapbox[<length>]{<lap amount>}{\ldots}, respectively. Positive \meta{amounts} lap the content to the right
% and negative to the left. The optional \meta{length} argument allows to set the final width.
% }
%
%
% \DescribeMacro{center}
% \DescribeMacro{center}'='<width>
% This key places 
% {\let\PrintMacroName\OrigPrintMacroName
% the content in a horizontal box which is by default \Macro\linewidth wide (i.e.\ as wide as a normal text paragraph)
% and centers it in it. The effect is very similar to \Macro\centerline. The original content is unchanged, but simply identical
% white space is added as a left and right margin. This is useful if the content is a figure or table and can be used as a replacement
% for \Macro\centering. One important difference is that the content will then have the given width which might influence (sub-)caption
% placement.
% If the content is wider than the available width it will stick out on both sides equally without causing an overfull hbox warning.
% Note that when \Macro\adjustbox paragraph is used at the beginning of a paragraph the normal paragraph indention is added, which
% will push the while box to the right and might cause an overfull line. In such cases a \Macro\noindent must be added beforehand.
% The \env{adjustbox} environment already uses this macro.
% }
%
% \DescribeMacro{right}
% \DescribeMacro{right}'='<width>
% Like |center| this key
% {\let\PrintMacroName\OrigPrintMacroName
% places the content in a box with the given width (by default \Macro\linewidth) but right aligns it.
% If the content is wider than the available width it will stick out into the left side without causing an overfull hbox warning.
% }
%
% \DescribeMacro{left}
% \DescribeMacro{left}'='<width>
% Like |center| this key
% {\let\PrintMacroName\OrigPrintMacroName
% places the content in a box with the given width (by default \Macro\linewidth) but left aligns it.
% If the content is wider than the available width it will stick out into the right side without causing an overfull hbox warning.
% }
%
%
% \DescribeMacro{inner}
% \DescribeMacro{inner}'='<width>
% Like |center|, |left| and |right| this key 
% {\let\PrintMacroName\OrigPrintMacroName
% places the content in a box with the given width (by default \Macro\linewidth) but aligns it towards the inner margin.
% If the content is wider than the available width it will stick into the outer margin without causing an overfull hbox warning.
% In |twoside| mode this key is equal to |left| for odd pages and equal to |right| for even pages.
% For |oneside| mode it is always equal to |center|, because there is no inner or outer margin.
% Note that the page-is-odd test might not always lead to correct results for some material close to a page boundary, because \TeX\
% might not have decided on which page it will be placed. This can be improved by loading the \pkg{changepage} package with the 
% \opt{strict} option, which uses a reference to determine the correct page number (and requires the usual additional compiler run).
% }
%
% \DescribeMacro{outer}
% \DescribeMacro{outer}'='<width>
% Identical to |inner| but aligns the content towards the outer margin.
% If the content is wider than the available width it will stick into the outer inner without causing an overfull hbox warning.
%
% \subsubsection{Pixel size}
%
% \DescribeMacro{dpi}'='<number (dots per inch)>
% The |dpi| key provides a simple interface to set the pixel size to the given DPI (dots per inch) value.
% For |pdflatex| the length unit |px| can be used to specify pixels. However, the equivalent dimension (length) of one pixel must be
% {\let\PrintMacroName\OrigPrintMacroName
% set using the \Macro\pdfpxdimen length register. To set a specific DPI value this length must be set using
% \Macro\setlength\AlsoMacro\pdfpxdimen{'1in/'<dots>}, which is done by the \MacroArgs'dpi='<dots> key.}
%
% \DescribeMacro{pxdim}'='<length>
% Alternatively
% {\let\PrintMacroName\OrigPrintMacroName
% to the |dpi| key the \Macro\pdfpxdimen length can be set directly to the given value. Afterwards |1px| will stand
% for the given \meta{length}.}
%
% \let\PrintMacroName\OrigPrintMacroName
% \clearpage
% \ifenglish
% \section{Examples}\label{sec:example}
% The following examples show the application of the package macros on an example text.
% The result is placed in a tight, colored frame box to show the resulting dimensions.
% \else
% \section{Beispiele}\label{sec:example}
% Die folgenden Beispiele zeigen die Anwendung der Makros dieses Packets auf einen Beispieltext (\Macro\example).
% Das Ergebnis wird mit einer engen, farbigen Umrandung dargestellt um die entgültigen Dimensionen sichtbar zu machen.
% \fi
%
% \begingroup
% \def\examplecontent{\begin{tabular}{@{}|c|c|@{}}
%       \hline
%       A & B \\
%       \hline
%       C & D \\
%       \hline
%   \end{tabular}^^A
% }
% \fboxsep=0pt%
% \def\Fbox{\fcolorbox{red}{white}}%
% \def\X{\vspace*{20pt}}%
% \par\bigskip\noindent
% \begin{tabular}{@{}lc}
%   \X\Macro\example      & \Fbox{\examplecontent} \\
%   \X\Macro\trimbox{10 5 10 5}{\AlsoMacro\example} & \Fbox{\trimbox{10 5 10 5}{\examplecontent}} \\
%   \X\Macro\clipbox{10 5 10 5}{\AlsoMacro\example} & \Fbox{\clipbox{10 5 10 5}{\examplecontent}} \\
%   \X\Macro\trimbox*{15 5 25 30}{\AlsoMacro\example} & \Fbox{\trimbox*{15 5 25 30}{\examplecontent}} \\
%   \X\Macro\clipbox*{15 5 25 30}{\AlsoMacro\example} & \Fbox{\clipbox*{15 5 25 30}{\examplecontent}} \\
%   \X\Macro\adjustbox{trim=10 5 10 5,angle=45}{\AlsoMacro\example} & \Fbox{\adjustbox{trim=10 5 10 5,angle=45}{\examplecontent}} \\
%   \X\Macro\adjustbox{scale=1.5}{\AlsoMacro\example} & \Fbox{\adjustbox{scale=1.5}{\examplecontent}} \\
%   \X\Macro\adjustbox{width=180pt,height=20pt}{\AlsoMacro\example} & \Fbox{\adjustbox{width=40pt,height=10pt}{\examplecontent}} \\
%   \X\Macro\adjustbox{width=180pt,height=20pt,keepaspectratio}{\AlsoMacro\example} & \Fbox{\adjustbox{width=40pt,height=10pt,keepaspectratio}{\examplecontent}} \\
% \end{tabular}
%
% \ifenglish
% \subsubsection*{Environment example:}
% \else
% \subsubsection*{Beispiel mit Umgebung:}
% \fi
% \noindent
% \Macro\begin{adjustbox}{angle=2}:\\
% \begin{adjustbox}{angle=2}
%    | verbatim inside \begin{adjustbox}{angle=2} ... \end{adjustbox} |
% \end{adjustbox}
% \endgroup
%
% \StopEventually{}
% \clearpage
% \section{Implementation}
% \ifenglish\else
% Die Dokumentation des Quellcodes ist nur auf Englisch verfügbar.
% \fi
%
% \iffalse
%<*de>
%% Wrapper to set language to German and jobname to 'adjustbox-de'.
%% Does not have to be included in distributions or placed on CTAN.
\expandafter\newif\csname ifenglish\endcsname
\englishfalse
\input{adjustbox.dtx}
%</de>
% \fi
%
% \iffalse
%<*adjustbox>
% \fi
% \iffalse
%</adjustbox>
% \fi
%
%
% \iffalse
%<*adjgrfx>
% \fi
% \iffalse
%</adjgrfx>
% \fi
%
%
% \iffalse
%<*adjcalc>
% \fi
% \iffalse
%</adjcalc>
% \fi
%
%
% \iffalse
%<*adjpgf.def>
% \fi
% \iffalse
%</adjpgf.def>
% \fi
%
%
% \Finale
% \endinput
